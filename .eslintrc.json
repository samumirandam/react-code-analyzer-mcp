{
  "env": {
    "browser": true,
    "es2022": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "prettier",
    "plugin:testing-library/react",
    "plugin:jsx-a11y/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "prettier",
    "testing-library",
    "import",
    "simple-import-sort"
  ],
  "rules": {
    // Prevenir errores comunes
    "no-console": ["warn", { "allow": ["error", "warn", "info"] }],
    "no-unused-vars": "off", // Desactivado porque @typescript-eslint/no-unused-vars lo reemplaza
    "no-debugger": "warn",
    "no-alert": "warn",

    // Mejores prácticas
    "eqeqeq": ["error", "always"],
    "no-var": "error",
    "prefer-const": "error",
    "prefer-template": "warn",

    // TypeScript específico
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/explicit-function-return-type": ["warn", { "allowExpressions": true }],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/consistent-type-imports": ["warn", { "prefer": "type-imports" }],
    // Estilo y formato
    "quotes": ["warn", "single", { "avoidEscape": true }],
    "semi": ["warn", "always"],
    "comma-dangle": ["warn", "always-multiline"],
    "arrow-body-style": ["warn", "as-needed"],

    // TypeScript adicional
    "@typescript-eslint/ban-ts-comment": ["warn", { "ts-ignore": "allow-with-description" }],
    "@typescript-eslint/member-ordering": "warn",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"]
      }
    ],
    // Reglas de importación
    "import/first": "error",
    "import/no-duplicates": "error",
    "import/no-unresolved": "off", // TypeScript ya lo maneja
    "import/no-cycle": "warn",
    "simple-import-sort/imports": "warn",
    "simple-import-sort/exports": "warn",

    "prettier/prettier": "warn"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
